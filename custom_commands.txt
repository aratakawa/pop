# UI commands
RV,mel.eval('RenderViewWindow')
HS,mel.eval('HypershadeWindow')
HG,mel.eval('HypergraphWindow')
EE,mel.eval('ExpressionEditor')
LE,mel.eval('lightLinkingEditor')
O,mel.eval('OutlinerWindow')
GE,mel.eval('GraphEditor')
DE,mel.eval('DynamicRelationshipEditor')
SE,mel.eval('ScriptEditor')
P,mel.eval('preferencesWnd "timeline"')
UV,mel.eval('TextureViewWindow')
NE,mel.eval('NamespaceEditor')
shell,mel.eval('shellWnd')
SA,mel.eval('ShadingGroupAttrEditor')
hotkey,mel.eval('hotkeyEditor')
markingMenu,mel.eval('MarkingMenuPreferencesWindow')
shelfEditor,mel.eval('ShelfPreferenceWindow')
pluginManager,mel.eval('PluginManager')

# Display
wire,import display;reload(display);display.wireframe()

# custom shortcut
std,cmds.shadingNode('mzStandardShader',asShader=True)
merge,cmds.shadingNode('mzStandardMerge',asShader=True)
cp,mel.eval('CenterPivot')
dh,mel.eval('DeleteHistory')
ft,cmds.makeIdentity(apply=True,t=1,r=1,s=1,n=0)
inst,cmds.instance()
hi,cmds.select(hi=True)
cl,cmds.select(cl=True)
invisible,mel.eval('select -hi;select `ls -invisible -sl`;print(size(`ls-sl`));')

# custom tools
aboveGround,import aboveGround;reload(aboveGround);aboveGround.run()
combineHierarchy,import combineHierarchy as comhi;reload(comhi);comhi.run()
faceAssignCleanup,import faceAssignCleanup as fac;reload(fac);fac.run()
faceAssignSelect,import faceAssignCleanup as fac;reload(fac);fac.select()
selected,import selected;reload(selected);selected.run()
setAttrs,import setAttrs;reload(setAttrs);setAttrs.run()
setObjectId,import objectId;reload(objectId);objectId.setId()
getObjectId,import objectId;reload(objectId);objectId.getObjectsById()
uvEdit,import uvEdit;reload(uvEdit);uvEdit.run()
matchObjs,import matchObj;reload(matchObj);matchObj.matchObjs()
# matchAll,import matchObj;reload(matchObj);matchObj.matchAll()
matchTransformInstance,import matchTransform;reload(matchTransform);matchTransform.matchTransform(instance=True)
matchTransformDuplicate,import matchTransform;reload(matchTransform);matchTransform.matchTransform()
matchRecursive,import matchObj;reload(matchObj);matchObj.matchRecursive()
meshCount,import meshCount;reload(meshCount);meshCount.run()
renameGeo,import renameGeo;reload(renameGeo);renameGeo.hrun()
instantiate,import instantiate;reload(instantiate);instantiate.instantiate()
instanceHierarchy,import instantiate;reload(instantiate);instantiate.mirrorInstance()
findUnused,import findUnused;reload(findUnused);findUnused.run()
checkShaderNames,import checkShaderNames;reload(checkShaderNames);checkShaderNames.run()
checkTextureNames,import checkTextureNames;reload(checkTextureNames);checkTextureNames.run()
smoothMesh2Subdiv,import smoothMesh2Subdiv;reload(smoothMesh2Subdiv);smoothMesh2Subdiv.smoothMesh2Subdiv()
selectAssigned,import shaderAssignment;reload(shaderAssignment);shaderAssignment.selectAssignedObjects()
copyTransform,import copyTransform;reload(copyTransform);copyTransform.run()
createVortex,import createVortex;reload(createVortex);createVortex.run()
v2a,import vrayUtils;reload(vrayUtils);vrayUtils.v2a()
vl2al,import vrayUtils;reload(vrayUtils);vrayUtils.vl2al()
vior,import vrayUtils;reload(vrayUtils);vrayUtils.checkIORLimit()
vsub,import vrayUtils;reload(vrayUtils);vrayUtils.vsub()
vuniform,import vrayUtils;reload(vrayUtils);vrayUtils.fixUniformColors()
checkExrFileGamma,import vrayUtils;reload(vrayUtils);vrayUtils.checkExrFileGamma()
cleanUvSets,import uvEdit;reload(uvEdit);uvEdit.cleanUvSets()
matteout,import geomAttr;reload(geomAttr);geomAttr.setGeomAttr('mtoa_matteout',True)
nomatteout,import geomAttr;reload(geomAttr);geomAttr.setGeomAttr('mtoa_matteout',False)
uvMesh,import uvMesh;reload(uvMesh);uvMesh.createMeshFromUV()
test,opel("a")